-- VIEW 1
CREATE OR REPLACE VIEW TopGoldMember AS
SELECT P.FIRST_NAME, P.LAST_NAME, LC.DATE_OF_ISSUE AS CARD_ISSUE_DATE
FROM
(SELECT BI.MEMBER_ID AS PERSON_ID
FROM BOOK_ISSUE BI
WHERE BI.ISSUE_DATE >= (CURRENT_DATE - INTERVAL 1 MONTH)
GROUP BY BI.MEMBER_ID
HAVING COUNT(DISTINCT BI.BOOK_ID) > 5) TOP
LEFT JOIN PERSON P ON TOP.PERSON_ID = P.PERSON_ID 
LEFT JOIN MEMBER M ON TOP.PERSON_ID = M.PERSON_ID
LEFT JOIN LIBRARY_CARD LC ON M.CARD_ID = LC.CARD_ID;

-- VIEW 2
CREATE OR REPLACE VIEW PopularBooks AS
SELECT BOOKS.*, BORROWED_COUNT
FROM
(SELECT BOOK_ID, COUNT(1) BORROWED_COUNT
FROM BOOK_ISSUE
WHERE ISSUE_DATE >= (CURRENT_DATE - INTERVAL 1 YEAR)
GROUP BY BOOK_ID) BORROWED
LEFT JOIN BOOKS ON BORROWED.BOOK_ID = BOOKS.BOOK_ID
ORDER BY BORROWED_COUNT DESC;

-- VIEW 3
CREATE OR REPLACE VIEW BestRatingPublisher AS
SELECT PUBLISHER_NAME
FROM PUBLISHER
WHERE PUBLISHER_ID NOT IN
(SELECT DISTINCT PUBLISHER_ID FROM
	(SELECT C.BOOK_ID, B.PUBLISHER_ID, AVG(RATING_SCORE) AS AVG_SCORE
	FROM COMMENTS C
	LEFT JOIN BOOKS B ON C.BOOK_ID = B.BOOK_ID
	GROUP BY C.BOOK_ID, B.PUBLISHER_ID) RATING
    WHERE AVG_SCORE < 4
);


-- VIEW 4
CREATE OR REPLACE VIEW POTENTIALGOLDMEMBER AS
SELECT P.PERSON_ID, P.FIRST_NAME, P.MIDDLE_NAME, P.LAST_NAME, PH.PHONE_NUMBER FROM PERSON P, PERSON_PHONE_NUMBER PH, MEMBER M, SILVER S, BOOK_ISSUE B
WHERE S.SILVER_CARD_ID = M.CARD_ID AND M.PERSON_ID = P.PERSON_ID AND P.PERSON_ID = PH.PERSON_ID AND B.MEMBER_ID = M.PERSON_ID AND ISSUE_DATE >= CURRENT_DATE-INTERVAL 1 YEAR
GROUP BY B.MEMBER_ID
HAVING COUNT(DISTINCT(MONTH(B.ISSUE_DATE))) = 12;


-- VIEW 5
CREATE OR REPLACE VIEW POPULARAUTHOR AS
SELECT AUTHOR_ID, AUTHOR_NAME, PERSON_ID, SUM(TOTAL) FROM (SELECT A.AUTHOR_ID, A.AUTHOR_NAME, A.PERSON_ID, COUNT(B.BOOK_ID) AS TOTAL FROM AUTHOR A, BOOK_ISSUE B, WRITES_BOOK W 
WHERE A.AUTHOR_ID = W.AUTHOR_ID AND W.BOOK_ID = B.BOOK_ID 
GROUP BY A.AUTHOR_ID) AS T
GROUP BY AUTHOR_ID
ORDER BY SUM(TOTAL) DESC;


